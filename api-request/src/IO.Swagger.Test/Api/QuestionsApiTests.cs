/* 
 * Smart Class API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing QuestionsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class QuestionsApiTests
    {
        private QuestionsApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new QuestionsApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of QuestionsApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' QuestionsApi
            //Assert.IsInstanceOfType(typeof(QuestionsApi), instance, "instance is a QuestionsApi");
        }

        /// <summary>
        /// Test ApiQuestionsGet
        /// </summary>
        [Test]
        public void ApiQuestionsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.ApiQuestionsGet();
            //Assert.IsInstanceOf<List<QuestionDTO>> (response, "response is List<QuestionDTO>");
        }
        /// <summary>
        /// Test ApiQuestionsIdDelete
        /// </summary>
        [Test]
        public void ApiQuestionsIdDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? id = null;
            //var response = instance.ApiQuestionsIdDelete(id);
            //Assert.IsInstanceOf<QuestionDTO> (response, "response is QuestionDTO");
        }
        /// <summary>
        /// Test ApiQuestionsIdGet
        /// </summary>
        [Test]
        public void ApiQuestionsIdGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? id = null;
            //var response = instance.ApiQuestionsIdGet(id);
            //Assert.IsInstanceOf<QuestionDTO> (response, "response is QuestionDTO");
        }
        /// <summary>
        /// Test ApiQuestionsIdPut
        /// </summary>
        [Test]
        public void ApiQuestionsIdPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? id = null;
            //QuestionDTO body = null;
            //instance.ApiQuestionsIdPut(id, body);
            
        }
        /// <summary>
        /// Test ApiQuestionsOfLessionTestIdGet
        /// </summary>
        [Test]
        public void ApiQuestionsOfLessionTestIdGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? testId = null;
            //var response = instance.ApiQuestionsOfLessionTestIdGet(testId);
            //Assert.IsInstanceOf<List<QuestionDTO>> (response, "response is List<QuestionDTO>");
        }
        /// <summary>
        /// Test ApiQuestionsPost
        /// </summary>
        [Test]
        public void ApiQuestionsPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //QuestionDTO body = null;
            //var response = instance.ApiQuestionsPost(body);
            //Assert.IsInstanceOf<QuestionDTO> (response, "response is QuestionDTO");
        }
    }

}
