/* 
 * Smart Class API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing OptionsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class OptionsApiTests
    {
        private OptionsApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new OptionsApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of OptionsApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' OptionsApi
            //Assert.IsInstanceOfType(typeof(OptionsApi), instance, "instance is a OptionsApi");
        }

        /// <summary>
        /// Test ApiOptionsGet
        /// </summary>
        [Test]
        public void ApiOptionsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.ApiOptionsGet();
            //Assert.IsInstanceOf<List<OptionDTO>> (response, "response is List<OptionDTO>");
        }
        /// <summary>
        /// Test ApiOptionsIdDelete
        /// </summary>
        [Test]
        public void ApiOptionsIdDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? id = null;
            //var response = instance.ApiOptionsIdDelete(id);
            //Assert.IsInstanceOf<OptionDTO> (response, "response is OptionDTO");
        }
        /// <summary>
        /// Test ApiOptionsIdGet
        /// </summary>
        [Test]
        public void ApiOptionsIdGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? id = null;
            //var response = instance.ApiOptionsIdGet(id);
            //Assert.IsInstanceOf<OptionDTO> (response, "response is OptionDTO");
        }
        /// <summary>
        /// Test ApiOptionsIdPut
        /// </summary>
        [Test]
        public void ApiOptionsIdPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? id = null;
            //OptionDTO body = null;
            //instance.ApiOptionsIdPut(id, body);
            
        }
        /// <summary>
        /// Test ApiOptionsPost
        /// </summary>
        [Test]
        public void ApiOptionsPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //OptionDTO body = null;
            //var response = instance.ApiOptionsPost(body);
            //Assert.IsInstanceOf<OptionDTO> (response, "response is OptionDTO");
        }
    }

}
