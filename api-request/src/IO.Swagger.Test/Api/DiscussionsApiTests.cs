/* 
 * Smart Class API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing DiscussionsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class DiscussionsApiTests
    {
        private DiscussionsApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new DiscussionsApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of DiscussionsApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' DiscussionsApi
            //Assert.IsInstanceOfType(typeof(DiscussionsApi), instance, "instance is a DiscussionsApi");
        }

        /// <summary>
        /// Test ApiDiscussionsGet
        /// </summary>
        [Test]
        public void ApiDiscussionsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.ApiDiscussionsGet();
            //Assert.IsInstanceOf<List<DiscussionDTO>> (response, "response is List<DiscussionDTO>");
        }
        /// <summary>
        /// Test ApiDiscussionsIdDelete
        /// </summary>
        [Test]
        public void ApiDiscussionsIdDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? id = null;
            //var response = instance.ApiDiscussionsIdDelete(id);
            //Assert.IsInstanceOf<DiscussionDTO> (response, "response is DiscussionDTO");
        }
        /// <summary>
        /// Test ApiDiscussionsIdGet
        /// </summary>
        [Test]
        public void ApiDiscussionsIdGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? id = null;
            //var response = instance.ApiDiscussionsIdGet(id);
            //Assert.IsInstanceOf<DiscussionDTO> (response, "response is DiscussionDTO");
        }
        /// <summary>
        /// Test ApiDiscussionsIdPut
        /// </summary>
        [Test]
        public void ApiDiscussionsIdPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? id = null;
            //DiscussionDTO body = null;
            //instance.ApiDiscussionsIdPut(id, body);
            
        }
        /// <summary>
        /// Test ApiDiscussionsOfLessionLessionIdGet
        /// </summary>
        [Test]
        public void ApiDiscussionsOfLessionLessionIdGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? lessionId = null;
            //var response = instance.ApiDiscussionsOfLessionLessionIdGet(lessionId);
            //Assert.IsInstanceOf<List<DiscussionDTO>> (response, "response is List<DiscussionDTO>");
        }
        /// <summary>
        /// Test ApiDiscussionsPost
        /// </summary>
        [Test]
        public void ApiDiscussionsPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DiscussionDTO body = null;
            //var response = instance.ApiDiscussionsPost(body);
            //Assert.IsInstanceOf<DiscussionDTO> (response, "response is DiscussionDTO");
        }
    }

}
